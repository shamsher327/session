<?php

/**
 * @file
 * Contains ln_hreflang.module.
 */

use Drupal\Core\Language\LanguageInterface;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_page_attachments_alter().
 */
function ln_hreflang_page_attachments_alter(array &$attachments) {
  // No need to add hreflang tags for 404/403 pages.
  if (\Drupal::request()->attributes->has('exception')) {
    return;
  }
  $language_manager = \Drupal::getContainer()->get('language_manager');
  // A hreflang for single language site.
    if (!$language_manager->isMultilingual()) {
    $current_path = \Drupal::service('path.current')->getPath();
    $current_url = \Drupal::service('path_alias.manager')
      ->getAliasByPath($current_path);
    global $base_url;
    $page_url = $base_url . $current_url;
    $langcode = \Drupal::languageManager()->getCurrentLanguage()->getId();
    // Override default hreflang with custom hreflang for site.
    $custom_langcode = \Drupal::state()
      ->get('ln_hreflang.hreflang.' . $langcode);
    $attachments['#attached']['html_head_link'][] = [
      [
        'rel' => 'alternate',
        'hreflang' => (isset($custom_langcode) && !empty($custom_langcode)) ? $custom_langcode : $langcode,
        'href' => $page_url,
      ],
      TRUE,
    ];
  }
  else {
    $route = \Drupal::service('path.matcher')->isFrontPage() ? '<front>' : '<current>';
    $links = $language_manager->getLanguageSwitchLinks(LanguageInterface::TYPE_INTERFACE, Url::fromRoute($route));
    if (empty($links->links)) {
      return;
    }
    foreach ($links->links as $langcode => $link) {
      // Override default hreflang with custom hreflang for site.
      $custom_langcode = \Drupal::state()
        ->get('ln_hreflang.hreflang.' . $langcode);
      if (!isset($link['query'])) {
        $link['query'] = [];
      }
      $link['query'] += \Drupal::request()->query->all();
      $link['url']->setOptions($link);
      $link['url']->setAbsolute();
      $attachments['#attached']['html_head_link'][] = [
        [
          'rel' => 'alternate',
          'hreflang' => (isset($custom_langcode) && !empty($custom_langcode)) ? $custom_langcode : $langcode,
          'href' => $link['url']->toString(),
        ],
        TRUE,
      ];
    }
  }
}

/**
 * Implements hook_form_alter().
 */
function ln_hreflang_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  // Change label for more user friendly.
  if($form_id == 'language_admin_add_form') {
    $form['custom_language']['langcode']['#title'] = t('Hreflang code');
    $form['custom_language']['langcode']['#description'] = t('Use hreflang codes as <a href=":w3ctags">defined by the W3C</a> for interoperability. <em>Examples: "en", "en-gb" and "zh-hant".</em>', [':w3ctags' => 'http://www.w3.org/International/articles/language-tags/']);
    $form['custom_language']['label']['#title'] = t('Market name');
  } else if($form_id == 'language_admin_edit_form') {
    $form['langcode_view']['#title'] = t('Hreflang code');
    $form['label']['#title'] = t('Market name');
  }
}
