<?php

/**
 * @file
 * Contains ln_c_google_optimize.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function ln_c_google_optimize_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ln_c_google_optimize module.
    case 'help.page.ln_c_google_optimize':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Google optimize code.') . '</p>';
      return $output;

    default:
  }
}

/**
 * The list of pages to add the snippet.
 *
 * @return bool
 *   hide_page_pages
 */
function ln_c_google_optimize_hide_page_pages() {
  $config = \Drupal::config('ln_c_google_optimize.googleoptimizeconfig');
  return $config->get('hide_page_pages') ?: '';
}

/**
 * Analytics property id.
 *
 * @return mixed
 */
function ln_c_google_optimize_analytics_property_id() {
  $config = \Drupal::config('ln_c_google_optimize.googleoptimizeconfig');

  if (empty($config->get('lang_analytics_status'))) {
    $analytics_property_id = $config->get('analytics_property_id');
  }
  else {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $analytics_property_id = $config->get('lang_analytics_id_' . $language);
  }

  return $analytics_property_id;
}

/**
 * Container id.
 *
 * @return mixed
 */
function ln_c_google_optimize_container_id() {
  $config = \Drupal::config('ln_c_google_optimize.googleoptimizeconfig');

  if (empty($config->get('lang_analytics_status'))) {
    $container_id = $config->get('container_id');
  }
  else {
    $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
    $container_id = $config->get('lang_container_id_' . $language);
  }

  return $container_id;
}

/**
 * Config to check weather to enable this feature or not..
 *
 * @return mixed
 */
function ln_c_google_optimize_hide_page_enabled() {
  $config = \Drupal::config('ln_c_google_optimize.googleoptimizeconfig');
  return $config->get('enable_google_optimize');
}

/**
 * Whether to put the snippet on the page.
 *
 * @return bool
 *   google_optimize_hide_page_active
 */
function ln_c_google_optimize_hide_page_active() {
  if (!ln_c_google_optimize_hide_page_enabled()) {
    // Not enabled so do nothing.
    return FALSE;
  }

  $admin_context = \Drupal::service('router.admin_context');
  if ($admin_context->isAdminRoute()) {
    // This is an admin page.
    return FALSE;
  }

  if (empty(ln_c_google_optimize_analytics_property_id()) && empty(ln_c_google_optimize_container_id())) {
    // No container configured, so do nothing.
    return FALSE;
  }

  // See if restricted to certain pages.
  if ($pages = ln_c_google_optimize_hide_page_pages()) {
    $current_path = \Drupal::service('path.current')->getPath();
    if (strpos($current_path, '/node/') !== FALSE) {
      $current_path = \Drupal::service('path.alias_manager')
        ->getAliasByPath($current_path);
    }
    if (!$match = \Drupal::service('path.matcher')
      ->matchPath($current_path, $pages)) {
      // Not for this page.
      return FALSE;
    }
  }

  return TRUE;
}

/**
 * Implements hook_page_attachments().
 *
 * Attach JavaScript to the appropriate scope/region of the page.
 */
function ln_c_google_optimize_page_attachments(array &$attachments) {
  if (!ln_c_google_optimize_hide_page_active()) {
    return;
  }
  $analytics = ln_c_google_optimize_analytics_property_id();
  $container = ln_c_google_optimize_container_id();

  $evidon_consent_check = sprintf('var evidonCookie = getCookie("_evidon_consent_cookie");
var oldEvidonCookie = getCookie("__ric");
function getCookie(name) {
var value = "; " + document.cookie;
var parts = value.split("; " + name + "=");
if (parts.length == 2) return parts.pop().split(";").shift();}
');

  $attachments['#attached']['html_head'][] = [
    [
      '#type'       => 'html_tag',
      '#tag'        => 'script',
      '#value'      => $evidon_consent_check,
      '#attributes' => [],
    ],
    'ln-c-google-optimize-evidon_consent',
  ];

  $anti_flickr_style = sprintf(".async-hide { opacity: 0 !important}");

  $attachments['#attached']['html_head'][] = [
    [
      '#type'       => 'html_tag',
      '#tag'        => 'style',
      '#value'      => $anti_flickr_style,
      '#attributes' => [],
    ],
    'ln-c-google-optimize-anti-flicker_style',
  ];

  $anti_flickr = sprintf("(function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
  h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
  (a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
  })(window,document.documentElement,'async-hide','dataLayer',4000,
  {'%s':true});
  ", $container);

  $attachments['#attached']['html_head'][] = [
    [
      '#type'       => 'html_tag',
      '#tag'        => 'script',
      '#value'      => $anti_flickr,
      '#attributes' => [],
    ],
    'ln-c-google-optimize-anti-flicker',
  ];

  $optContainerId = sprintf("(function (optContainerId) {
    if (typeof evidonCookie === 'undefined') {
       if (typeof oldEvidonCookie === 'undefined') {
        return;
      }
    }
    var script = document.createElement('script');
    script.src = 'https://www.googleoptimize.com/optimize.js?id=' + optContainerId;
    script.async = true;
    document.getElementsByTagName('head')[0].appendChild(script)
    })('%s')
  ", $container);

  $attachments['#attached']['html_head'][] = [
    [
      '#type'       => 'html_tag',
      '#tag'        => 'script',
      '#value'      => $optContainerId,
      '#attributes' => [],
    ],
    'ln-c-google-optimize-optContainerId',
  ];

}

/**
 * Implements hook_module_implements_alter().
 *
 * Sets the hook_page_attachments to be loaded last.
 *
 * So google_analytics_tracking_script will already be loaded.
 */
function ln_c_google_optimize_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'page_attachments') {
    $group = $implementations['ln_c_google_optimize'];
    unset($implementations['ln_c_google_optimize']);
    $implementations['ln_c_google_optimize'] = $group;
  }
}

