{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
] %}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }} {% if paragraph.field_section_id.value %} id = "{{ paragraph.field_section_id.value|replace({' ': ''}) }}" {% endif %} >
    {% block content %}
      {% set cta_attribute = create_attribute() %}
      {% set link_target = '_blank' %}
      {% if  content.field_c_link[0]['#options']['attributes'] is defined and content.field_c_link[0]['#options']['attributes']['target'] is defined %}
        {% set link_target =  content.field_c_link[0]['#options']['attributes']['target'] %}
      {% endif %}
      {% if content.field_link_type[0]['#markup'] == 'cta_button' %}
        {% set button_color =  '#0045AB' %}
        {% if content.field_button_color[0]['#options'] is defined and content.field_button_color[0]['#options'].entity.field_color_code.value is not empty %}
          {% set button_color =  content.field_button_color[0]['#options'].entity.field_color_code.value %}
        {% endif %}
        {% set font_style = '#ffffff' %}
        {% if content.field_button_color[0]['#options'] is defined and content.field_button_color[0]['#options'].entity.field_font_color.value is not empty %}
          {% set font_style = content.field_button_color[0]['#options'].entity.field_font_color.value %}
        {% endif %}
        {% set button_position = '' %}
        {% if content.field_horizontal_position and content.field_horizontal_position[0]['#markup'] %}
          {% set button_position = 'horizontal-' ~ content.field_horizontal_position[0]['#markup'] %}
        {% endif %}
        <div {{ cta_attribute.addClass(button_position, 'dsu_btn') }}>
          <div class="btn image_cta_link" style="background:{{ button_color }}">
            <a href="{{ content.field_c_link[0]['#url'] }}" title="{{ content.field_c_link[0]['#title'] }}"
               target="{{ link_target }}" style="color:{{ font_style }}">
              {{ content.field_c_link[0]['#title'] }}
            </a>
          </div>
        </div>
      {% elseif content.field_link_type[0]['#markup'] == 'link' %}
        {% set button_position = '' %}
          {% if content.field_horizontal_position and content.field_horizontal_position[0]['#markup'] %}
          {% set button_position = 'horizontal-' ~ content.field_horizontal_position[0]['#markup'] %}
        {% endif %}
        <div {{ cta_attribute.addClass(button_position) }}>
        <a href="{{ content.field_c_link[0]['#url'] }}" title="{{ content.field_c_link[0]['#title'] }}"
           target="{{ link_target }}">
          {{ content.field_c_image }}
          <span>{{ content.field_c_link[0]['#title'] }}</span>
        </a>
        </div>
      {% endif %}
    {% endblock %}
  </div>
{% endblock paragraph %}
