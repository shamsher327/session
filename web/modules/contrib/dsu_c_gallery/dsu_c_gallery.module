<?php

/**
 * @file
 */

use Drupal\field\FieldConfigInterface;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;
use Drupal\media\Entity\Media;

/**
 * Implements HOOK_preprocess_theme().
 */
function dsu_c_gallery_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__c_gallery_item' => [
      'template'  => 'paragraph--c-gallery-item',
      'base hook' => 'paragraphs',
    ],
    'paragraph__c_gallery'      => [
      'template'  => 'paragraph--c-gallery',
      'base hook' => 'paragraphs',
    ],
    'paragraph__dsu_gallery'    => [
      'template'  => 'paragraph--dsu-gallery',
      'variables' => [
        'gallery'          => NULL,
        'gallery_preview'  => NULL,
        'parent_paragraph' => NULL,
      ],
    ],
  ];
}

/**
 * Implements hook_preprocess_HOOK() for paragraph.html.twig.
 */
function dsu_c_gallery_preprocess_paragraph(&$variables) {
  $slick_responsive = TRUE;

  if ($slick_responsive == TRUE) {
    if ($variables['paragraph']->getType() == 'c_gallery') {
      $slick = \Drupal::service('slick.manager');
      $build = [];
      $build['settings'] = [
        'optionset' => 'gallery_slick',
      ];
      $paragraph_view_builder = \Drupal::entityTypeManager()
        ->getViewBuilder('paragraph');
      $gallery_item_entity_display_settings = \Drupal::service('entity_display.repository')
        ->getViewDisplay('paragraph', 'c_gallery_item', 'default');
      $item_ids = [];
      foreach ($variables['paragraph']->get('field_c_gallery_item')
                 ->getValue() as $item) {
        $item_ids[] = $item['target_id'];
      }
      $gallery_items = \Drupal::entityTypeManager()
        ->getStorage('paragraph')
        ->loadMultiple($item_ids);
      $gallery = [];
      if (!empty($gallery_items)) {
        $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
        foreach ($gallery_items as $gallery_item) {
          if ($gallery_item->hasTranslation($language)) {
            $item_translation = $gallery_item->getTranslation($language);
            $gallery[$gallery_item->id()] = [];
            $fields = $gallery_item->getFieldDefinitions();
            get_classy_paragraph_reference_field($fields, $gallery_item, $gallery_item->id(), $gallery);
            $gallery_field = '';
            if (!empty($item_translation->get('field_c_title')
              ->getValue())) {
              $gallery[$gallery_item->id()]['field_c_title'] = $item_translation->get('field_c_title')
                ->getString();
            }
            if ($item_translation->hasField('field_title_positions') && !empty($item_translation->get('field_title_positions')
                ->getValue())) {
              $gallery[$gallery_item->id()]['field_title_positions'] = $item_translation->get('field_title_positions')
                ->getString();
            }
            if ($item_translation->hasField('field_c_gallery_item_title_style') && !empty($item_translation->get('field_c_gallery_item_title_style')
                ->getValue())) {
              $gallery[$gallery_item->id()]['field_c_gallery_item_title_style'] = $item_translation->get('field_c_gallery_item_title_style')
                ->getString();
            }
            if (!empty($gallery_item->get('field_c_thumbnail_image')
              ->getValue())) {
              $gallery[$gallery_item->id()]['field_c_thumbnail_image'] = $paragraph_view_builder->viewField($gallery_item->field_c_thumbnail_image, $gallery_item_entity_display_settings->getComponent('field_c_thumbnail_image'));
              if (!empty($gallery_item->get('field_c_thumbnail_image')
                ->first())) {
                $image_id = $gallery_item->get('field_c_thumbnail_image')
                  ->getString();
                $image_data = get_dsu_gallery_image_url($image_id);
                $thumb_styles = [];
                $image_styles = [
                  'crop_dsu_c_gallery_thumb_large',
                  'crop_dsu_c_gallery_thumb_medium',
                  'crop_dsu_c_gallery_thumb_small',
                ];
                foreach ($image_styles as $key => $img_style) {
                  $img_style_object = ImageStyle::load($img_style);
                  $thumb_styles[$key] = (is_object($img_style_object)) ? $img_style_object->buildUrl($image_data['uri']) : '';
                }
                $gallery[$gallery_item->id()]['thumbnail_url'] = $image_data['url'];
                $gallery[$gallery_item->id()]['thumbnail_alt'] = $image_data['alt'];
                $gallery[$gallery_item->id()]['thumbnail_style'] = implode(',', array_filter($thumb_styles));
              }
            }
            if (!empty($gallery_item->get('field_c_image')->getValue())) {
              $gallery_field = 'field_c_image';
              if (!empty($gallery_item->get('field_c_image')->first())) {
                $image_id = $gallery_item->get('field_c_image')
                  ->getString();
                $image_data = get_dsu_gallery_image_url($image_id);
                $gallery[$gallery_item->id()]['field_c_image'] = $gallery_item->get('field_c_image');
                $gallery[$gallery_item->id()]['image_url'] = $image_data['url'];
                $gallery[$gallery_item->id()]['image_uri'] = $image_data['uri'];
                $gallery[$gallery_item->id()]['image_alt'] = $image_data['alt'];
                $gallery[$gallery_item->id()]['video_url'] = '';
              }
            }
            if (!empty($gallery_item->get('field_c_gallery_video_embed_url')
              ->getValue())) {
              $gallery_field = 'field_c_gallery_video_embed_url';
              $gallery[$gallery_item->id()]['video_url'] = $gallery_item->get('field_c_gallery_video_embed_url')
                ->getString();
            }
            if ($gallery_field != '') {
              $gallery[$gallery_item->id()][$gallery_field] = $paragraph_view_builder->viewField($gallery_item->$gallery_field, $gallery_item_entity_display_settings->getComponent($gallery_field));
            }
          }
        }
      }
      if (!empty($gallery)) {
        $variables['content']['field_c_gallery_item'] = [
          '#theme'            => 'paragraph__dsu_gallery',
          '#gallery'          => $gallery,
          '#gallery_preview'  => NULL,
          '#parent_paragraph' => NULL,
        ];
        $variables['#attached']['library'][] = 'dsu_c_gallery/gallery';
        if (array_key_exists('#attached', $variables)) {
          if (in_array('dsu_c_gallery/dsu-gallery', $variables['#attached']['library'])) {
            $key = array_search('dsu_c_gallery/dsu-gallery', $variables['#attached']['library']);
            unset($variables['#attached']['library'][$key]);
            $variables['#attached']['library'] = array_values($variables['#attached']['library']);
          }
        }
      }
    }
  }
  else {
    if ($variables['paragraph']->getType() === 'c_gallery') {
      $variables['#attached']['library'][] = 'dsu_c_gallery/gallery';
      $variables['attributes']['id'] = 'dsu-gallery-content--' . $variables['paragraph']->id();
      $variables['attributes']['class'][] = 'dsu-gallery-content';
    }
    else {
      if ($variables['paragraph']->getType() === 'c_gallery_item') {
        $variables['#attached']['library'][] = 'dsu_c_gallery/gallery-item';

        if (isset($variables['content']['field_c_gallery_video_embed_url']['#theme'])
            && isset($variables['content']['field_c_image']['#theme'])) {
          unset($variables['content']['field_c_image']);
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_hook() for field.html.twig.
 */
function dsu_c_gallery_preprocess_field(&$variables) {
  if ($variables['entity_type'] === 'paragraph' && $variables['element']['#object']->getType() == 'c_gallery') {
    if (!empty($variables['items'])) {
      foreach ($variables['items'] as $key => $value) {
        $variables['items'][$key]['attributes']->setAttribute('class', 'dsu-gallery-content--items');
      }
    }
  }
  if ($variables['entity_type'] === 'paragraph' && $variables['element']['#object']->getType() == 'c_gallery_item') {
    if ($variables['field_name'] === 'field_c_image' || $variables['field_name'] === 'field_c_gallery_video_embed_url') {
      $variables['attributes']['id'] = 'dsu-gallery-content--item-' . $variables['element']['#object']->id();
      $variables['attributes']['class'][] = 'dsu-gallery-content--item';
    }
    else {
      if ($variables['field_name'] === 'field_c_thumbnail_image') {
        $variables['attributes']['id'] = 'dsu-gallery-content--preview-' . $variables['element']['#object']->id();
        $variables['attributes']['target-gallery'] = 'dsu-gallery-content--preview-' . $variables['element']['#object']->id();
        $variables['attributes']['class'][] = 'dsu-gallery-content--preview';
      }
    }
  }
}

/**
 * Get image file url.
 */
function get_dsu_gallery_image_url($image_id) {
  $return_date = [];
  $entity_image = Media::load($image_id);
  if (!empty($entity_image)) {
    $field_name = ($entity_image->hasField('image'))
      ? 'image'
      : (($entity_image->hasField('field_media_image')) ? 'field_media_image' : 'field_media_image');
    if ($entity_image->get($field_name)) {
      $image_file_id = $entity_image->get($field_name)
        ->first()
        ->get('target_id')
        ->getString();
      $image_file_id = File::load($image_file_id);
      $image_file_alt_text = $entity_image->get($field_name)
        ->first()
        ->get('alt')
        ->getString();
      $return_date['url'] = file_create_url($image_file_id->getFileUri());
      $return_date['alt'] = $image_file_alt_text;
      $return_date['uri'] = $image_file_id->getFileUri();
    }
  }

  return $return_date;
}

/**
 * Implements hook_ln_sample_content().
 */
function dsu_c_gallery_ln_sample_content() {
  /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
  $module_handler = \Drupal::service('module_handler');
  /** @var \Drupal\Core\Extension\Extension $module_object */
  $module_object = $module_handler->getModule(basename(__FILE__, '.module'));
  $module_name = $module_object->getName();

  $source = drupal_get_path('module', $module_name) . '/content';
  /** @var \Drupal\Core\File\FileSystemInterface $file_system */
  $file_system = \Drupal::service('file_system');
  $files = $file_system->scanDirectory($source, '/demo.*\.(yml)$/');
  $yaml_file_path = NULL;
  foreach ($files as $file) {
    $yaml_file_path[] = '/content/' . $file->filename;
  }

  return $yaml_file_path;
}

/**
 * Find fields which are referencing classy_paragraphs.
 *
 * @param $entity_fields
 * @param $entity
 * @param $item_id
 * @param $data
 */
function get_classy_paragraph_reference_field($entity_fields, $entity, $item_id, &$data) {
  $class_fields = [];
  foreach ($entity_fields as $field) {
    if ($field instanceof FieldConfigInterface) {
      /** @var Drupal\field\Entity\FieldStorageConfig $field_storage */
      $field_storage = $field->getFieldStorageDefinition();

      $target = $field_storage->getSetting('target_type');
      if ($target == 'classy_paragraphs_style') {
        $class_fields[] = $field;
      }
    }
  }
  foreach ($class_fields as $class_field) {
    $field_name = $class_field->get('field_name');
    if (!$entity->get($field_name)->isEmpty()) {
      $field = $entity->get($field_name);
      $classes = $field->referencedEntities();
      foreach ($classes as $class) {
        $raw_classes = $class->getClasses();
        $array_classes = explode("\r\n", $raw_classes);
        $data[$item_id]['paragraph_classes'] = implode(' ', $array_classes);
      }
    }
  };
}
