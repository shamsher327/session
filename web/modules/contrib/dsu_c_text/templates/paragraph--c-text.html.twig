{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
] %}
{% block paragraph %}

  {% if content.field_c_link[0] is defined %}
    {% set button_color = 'none' %}
    {% if content.field_button_color[0]['#options'] is defined %}
      {% set button_color =  content.field_button_color[0]['#options'].entity.field_color_code.value|trim %}
    {% endif %}
    {% set font_style = '#007bff' %}
    {% if content.field_button_color[0]['#options'] is defined %}
      {% set font_style = content.field_button_color[0]['#options'].entity.field_font_color.value|trim %}
    {% endif %}
  {% endif %}
  {% set button_attribute = create_attribute() %}
  {% set button_classes = [
    'dsu_btn',
    (content.field_horizontal_aligment and content.field_horizontal_aligment[0]['#markup']) ? 'horizontal-' ~ content.field_horizontal_aligment[0]['#markup'],
    (content.field_vertical_position and content.field_vertical_position[0]['#markup']) ? 'vertical-' ~ content.field_vertical_position[0]['#markup'],
  ] %}
  {% set text_align_attribute = create_attribute() %}
  {% set text_align_classes = [
    (content.field_text_horizontal_alignment and content.field_text_horizontal_alignment[0]['#markup']) ?
    'horizontal_' ~ content.field_text_horizontal_alignment[0]['#markup'],
  ] %}

  {% set link_target =
    (content.field_c_link[0]['#options']['attributes'] is defined
    and content.field_c_link[0]['#options']['attributes']['target'] is defined) ?
    content.field_c_link[0]['#options']['attributes']['target'] : 'blank' %}
  <div{{ attributes.addClass(classes) }} style="background-image: url('{{ field_background_image_img_url }}');" {% if paragraph.field_section_id.value %} id = "{{ paragraph.field_section_id.value|replace({' ': ''}) }}" {% endif %} >
    {% block content %}
      {% if content.contextual_links %}
        {{ content.contextual_links }}
      {% endif %}
      <article class="contextual-region dsu-component-page is-promoted full clearfix" role="article">
        <div class="content">
          <div class="field field--name-field-components field--type-entity-reference-revisions field--label-hidden field--items">
            <div class="field--item">
              <div class="paragraph paragraph--type--c-text paragraph--view-mode--default" tabindex="0">
                {% if content.field_c_link[0] is defined %}
                  {% if content.field_vertical_position[0]['#markup'] == 'above' %}
                    <div {{ button_attribute.addClass(button_classes) }}>
                      <div class="btn dsu_cta_link" style="background:{{ button_color }}; box-shadow: 1px 1px 4px rgb(0 0 0 / 40%)">
                        <a href="{{ content.field_c_link[0]['#url'] }}"
                           title="{{ content.field_c_link[0]['#title'] }}"
                           target="{{ link_target }}"
                           role="button" style="color:{{ font_style }}">
                          {{ content.field_c_link[0]['#title'] }}
                        </a>
                      </div>
                    </div>
                  {% endif %}
                {% endif %}

                <div {{ text_align_attribute.addClass(text_align_classes) }} >
                    {% if content.field_c_text_title_style[0]['#markup'] %}
                    {% set title_tag=content.field_c_text_title_style[0]['#markup'] %}
                     <{{ title_tag }}> {{ content.field_c_title }}</{{ title_tag }}>
                  {% else %}
                      {{ content.field_c_title }}
                  {% endif %}
                {{ content.field_sub_heading }}
                {{ content.field_summary_text }}
                </div>

                {% if content.field_c_link[0] is defined %}
                  {% if content.field_vertical_position[0]['#markup'] == 'below' or content.field_vertical_position[0]['#markup'] == '' %}
                    <div {{ button_attribute.addClass(button_classes) }} >
                      <div class="btn dsu_cta_link" style="background:{{ button_color }}; box-shadow: 1px 1px 4px rgb(0 0 0 / 40%)">
                        <a href="{{ content.field_c_link[0]['#url'] }}"
                           title="{{ content.field_c_link[0]['#title'] }}"
                           target="{{ link_target }}"
                           role="button" style="color:{{ font_style }}">
                          {{ content.field_c_link[0]['#title'] }}
                        </a>
                      </div>
                    </div>
                  {% endif %}
                {% endif %}
              </div>
            </div>
          </div>
        </div>
      </article>
    {% endblock %}
  </div>
{% endblock paragraph %}
