<?php

/**
 * @file
 * Installation file for Lightnest Sample Content.
 */

/**
 * Implements hook_uninstall().
 */
function ln_sample_content_uninstall() {
  // Delete created nodes of type teaser
  $properties['name'] = 'Sample content';
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties($properties);
  $term = reset($terms);
  if(!empty($term)) {
      $term_id = $term->id();
      $nids = \Drupal::entityQuery('node')->condition('type','teaser')->condition('field_dsu_tags', $term_id)->execute();
      foreach ($nids as $nid) {
        \Drupal\node\Entity\Node::load($nid)->delete();
      }

      // Delete taxonomy term 'Sample content'
      $term->delete();
   }
  // Delete node with demo components
  $config = Drupal::service('config.factory')->getEditable('ln_sample_content.settings');
  $nid = $config->get('ln_sample_content.sample_content_nid');
  if(!is_null($nid)) {
    \Drupal\node\Entity\Node::load($nid)->delete();
  }

  // Load and Delete taxonomy term 'Sample Color'
    $properties = [];
    $properties['name'] = 'Sample Color';
    $sample_color_terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties($properties);
    $sample_color_terms = reset($sample_color_terms);
    if(!empty($sample_color_terms)) {
        $sample_color_terms->delete();
    }

    // Load and Delete taxonomy term 'Sample media 1'
    $properties = [];
    $properties['name'] = 'Sample media 1';
    $sample_media_terms1 = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties($properties);
    $sample_media_terms1 = reset($sample_media_terms1);
    if(!empty($sample_media_terms1)) {
        $sample_media_terms1->delete();
    }

    // Load and Delete taxonomy term 'Sample media 2'
    $properties = [];
    $properties['name'] = 'Sample media 2';
    $sample_media_terms2 = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadByProperties($properties);
    $sample_media_terms2 = reset($sample_media_terms2);
    if(!empty($sample_media_terms2)) {
        $sample_media_terms2->delete();
    }
}
