<?php

/**
 * @file
 * Contains ln_c_social_buttons.module.
 */

use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;

/**
 * Implements hook_theme().
 */
function ln_c_social_buttons_theme($existing, $type, $theme, $path) {
  return [
    'paragraph__c_socialbuttons' => [
      'template' => 'paragraph--c-socialbuttons',
      'base hook' => 'paragraph',
    ],
    'paragraph__c_social_buttons_item' => [
      'template' => 'paragraph--c-social-buttons-item',
      'base hook' => 'paragraph',
    ],
  ];
}

function ln_c_social_buttons_preprocess_paragraph(&$variables) {
  if($variables['paragraph']->getType() == 'c_socialbuttons') {
    $variables['#attached']['library'][] = 'ln_c_social_buttons/social-buttons';
  }
  if($variables['paragraph']->getType() == 'c_social_buttons_item') {
    if (!empty($variables['paragraph']->get('field_social_link_platform')->first())
	  && isset($variables['content']['field_social_link_platform'][0]['#options']['entity'])) {
      $img_target_id = $variables['content']['field_social_link_platform'][0]['#options']['entity']->get('field_c_icon')->getString();
      $entity_image = Media::load($img_target_id);

      $field_name = ($entity_image->hasField('image'))
        ? 'image'
        : (($entity_image->hasField('field_media_image')) ? 'field_media_image' : 'field_media_image');
      if (!empty($entity_image) && !empty($entity_image->get($field_name)->first())) {
        $image_file_id = $entity_image->get($field_name)->first()->get('target_id')->getString();
      }
      $file = File::load($image_file_id);
      $variables['content']['image_uri'] = is_object($file) ? file_create_url($file->getFileUri()) : '';
    }
  }
}

/**
 * Implements hook_ln_sample_content().
 */
function ln_c_social_buttons_ln_sample_content() {
    /** @var \Drupal\Core\Extension\ModuleHandlerInterface $module_handler */
    $module_handler = \Drupal::service('module_handler');
    /** @var \Drupal\Core\Extension\Extension $module_object */
    $module_object = $module_handler->getModule(basename(__FILE__, '.module'));
    $module_name = $module_object->getName();

    $source = drupal_get_path('module', $module_name) . '/content';
    /** @var \Drupal\Core\File\FileSystemInterface $file_system */
    $file_system = \Drupal::service('file_system');
    $files = $file_system->scanDirectory($source, '/demo.*\.(yml)$/');
    $yaml_file_path = NULL;
    foreach ($files as $file) {
        $yaml_file_path[] = '/content/' . $file->filename;
    }

    return $yaml_file_path;
}